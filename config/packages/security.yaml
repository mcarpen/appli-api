security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        app_provider:
            entity:
                class: App\Entity\User

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                username_path:            username
                password_path:            password
                check_path:               /api/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
                remember_me:              true
                use_forward:              false
        api:
            pattern:   ^/api/
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            pattern:   ^/
            anonymous: ~
            provider:  app_provider
            logout:
                path:   /logout
                target: /login
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

    access_control:
        - { path: ^/login,      roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,        roles: ROLE_USER }
        - { path: ^/admin,      roles: ROLE_ADMIN }